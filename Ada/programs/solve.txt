solvejumble

    -- to generate the anagrams from the letters for each jumbled word
    -- returns the list of anagrams,
    function generateAnagram(word: unbounded_string) is

        procedure swap(x : in out character, y : in out character) is
            temp : character;
        begin
            temp := x;
            x := y;
            y := x;
        end swap;

        function permutate(word : unbounded_string, left : integer, right : integer) is
            i : integer;
        begin
            if left = right then
                put_line(word);
            else
                for i in left .. right loop
                    swap(word(left), word(i));
                    permutate(word, left +1, right);
                    swap(word(left), word(i));
                end loop;
            end if;
        end permutate;

        type p_table is array(1..1000) of unbounded_string;
        p : p_table;
        s : unbounded_string;

    begin
        -- call function generate all permutations, each permutation calls 
        -- findAnagram using the dictionary created from buildLEXICON

    end generateAnagram;

    -- builds a dictionary to search for the anagram in, from the 
    -- system dictionary. uses a data structure
    -- procedure buildLEXICON() is
       -- begin
    -- end buildLEXICON;

    -- to search for the anagrams in a dictionary, printing all results
    --procedure findAnagram() is 
      --  begin
    -- end findAnagram;
